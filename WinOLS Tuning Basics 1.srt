1
00:00:00,000 --> 00:00:10,000
在这一系列模块中，我们将深入了解什么是WinOLS、它的功能， 以及在使用这款软件时需要掌握的一些核心概念。 

2
00:00:10,000 --> 00:00:18,000
不过，在此之前，我们会先回顾一些更高层次的概念， 这些概念适用于调校或修改原厂ECU。 

3
00:00:18,000 --> 00:00:23,000
首先，让我们了解“重刷”（reflashing）这个术语的含义。 

4
00:00:23,000 --> 00:00:33,000
传统上，当我们想要调整或优化发动机的调校时， 通常的做法是将原厂ECU替换为后装的独立ECU。 

5
00:00:33,000 --> 00:00:45,000
这种ECU为调校师提供了对发动机调校参数的完全控制， 并且可以通过笔记本电脑上的调校软件实时进行更改，界面简单易懂。 

6
00:00:45,000 --> 00:00:53,000
然而，随着汽车和发动机变得越来越复杂， 在原厂车上安装独立ECU变得越来越困难。 

7
00:00:53,000 --> 00:01:06,000
虽然独立ECU很可能能够正确控制发动机并使其运行， 但将这种ECU与车辆其他电子系统集成在一起， 在现代汽车上却是一个真正的难题。 

8
00:01:06,000 --> 00:01:17,000
现在，汽车通常配备多个ECU，分别控制车辆运行的不同方面， 包括发动机、变速箱、ABS、空调，甚至仪表盘。 

9
00:01:17,000 --> 00:01:27,000
这些系统彼此之间需要通信，并且为了正常运行， 它们依赖于从发动机控制单元接收到的正确信息。 

10
00:01:27,000 --> 00:01:37,000
当我们将原厂ECU替换为后装ECU时， 车内其他部件所依赖的通信数据流可能会丢失， 这可能导致车辆的其他系统无法正常运行。 

11
00:01:39,000 --> 00:01:51,000
在许多大约2000年之后生产的汽车中， 我们在优化调校时有了一个替代选项，那就是修改存储在原厂ECU中的地图。 

12
00:01:51,000 --> 00:01:57,000
这种技术被称为“重刷”（reflashing）， 通常简称为“刷写”或“刷调”（flash tuning）。 

13
00:01:57,000 --> 00:02:11,000
该技术包括通过OBD2接口或直接从ECU下载原始数据， 修改所需的地图，然后将其上传或重新刷写回ECU中。 

14
00:02:11,000 --> 00:02:19,000
重刷是一种非常强大的技术， 它允许我们以与工厂标定工程师相同的方式对发动机进行调校。 

15
00:02:19,000 --> 00:02:36,000
这通常是一个相对经济高效的选择， 因为车辆已经配备了ECU，因此无需额外购买可编程ECU。 不过，正如我们将看到的，重刷通常需要一些硬件和软件解决方案，这会产生一定的成本。 

16
00:02:36,000 --> 00:02:53,000
另一个优势是，我们通常处理的是专为控制某一特定发动机而设计和编程的ECU， 因此可用的地图和ECU控制策略能够非常具体地满足该发动机的需求。 

17
00:02:53,000 --> 00:03:04,000
这通常比通用的后装独立ECU提供更无缝的集成， 后者需要能够适当控制几乎任何发动机。 

18
00:03:04,000 --> 00:03:13,000
当我们从ECU中下载地图时，得到的是一个原始的二进制文件， 单靠它本身并没有太多意义，因此对我们来说用处不大。 

19
00:03:13,000 --> 00:03:26,000
为了能够修改这些地图，我们需要一种方法来解读这些原始信息， 以便我们能够以更熟悉的方式查看和操作各种地图， 就像在独立ECU调校领域中那样。 

20
00:03:26,000 --> 00:03:29,000
在这个阶段，我们可以选择两种路径之一。 

21
00:03:29,000 --> 00:03:37,000
市面上有许多商业版和开源或免费可用的重刷软件包，适用于各种主流车型。 

22
00:03:37,000 --> 00:03:49,000
这些软件让重刷工作变得更加轻松，因为开发者为我们提供了一个友好的用户界面来进行调校更改，更重要的是，他们已经找到了我们需要访问的地图数据。 

23
00:03:49,000 --> 00:03:56,000
在讨论第二种选择之前，让我们先回顾一下，聊聊原始二进制文件中包含的内容。 

24
00:03:56,000 --> 00:04:03,000
单独来看，这些文件对我们基本上毫无用处，我们无法在没有解读其含义的情况下进行调校更改。 

25
00:04:03,000 --> 00:04:07,000
在这个文件中，可能包含数千个独立的地图和参数。 

26
00:04:07,000 --> 00:04:12,000
此外，还会有一些与发动机调校无关的信息，比如防盗代码。 

27
00:04:12,000 --> 00:04:21,000
作为调校师，我们需要一种方法来显示我们关心的信息，例如点火正时、燃油表和增压表等。 

28
00:04:21,000 --> 00:04:29,000
为此，我们需要知道某个地址，以便找到具体的地图，同时还需要知道地图的大小以及轴值的位置。 

29
00:04:29,000 --> 00:04:39,000
我们还可能需要对原始数值进行一些缩放处理，将其转换为对我们有意义的数值，比如Lambda目标值或点火正时值等。 

30
00:04:39,000 --> 00:04:43,000
例如，Lambda目标值或点火正时数值，这些转换后的数据才是我们调校时真正需要的参考信息。 

31
00:04:43,000 --> 00:04:51,000
将原始二进制文件转换为对我们有用的内容，是通过所谓的定义文件或描述文件实现的。 

32
00:04:51,000 --> 00:05:01,000
你可以把它想象成一张路线图，告诉用户界面软件需要显示哪些地图，它们的位置、大小以及需要应用的缩放比例。 

33
00:05:01,000 --> 00:05:04,000
基本上有两种方法可以做到这一点。 

34
00:05:04,000 --> 00:05:16,000
如果我们选择一个商业版或开源的重刷软件包，那么供应商已经为我们完成了所有繁重的工作，并提供了该软件支持的车辆所需的定义文件。 

35
00:05:16,000 --> 00:05:29,000
这种方法的一个缺点是，它通常对可调校的车辆范围非常有限，而且许多流行车型在商业或开源重刷软件包中几乎没有支持或完全不支持。 

36
00:05:29,000 --> 00:05:38,000
根据所使用软件的质量，你还可能发现定义文件不完整或不准确，这会限制你能够完成的工作。 

37
00:05:38,000 --> 00:05:50,000
另一方面，也是本课程的主题，我们可以使用像 WinOLS 这样的软件包，并深入理解 ECU 的工作原理，从而自己找到这些地图。 

38
00:05:50,000 --> 00:05:52,000
基本上就是创建我们自己的定义文件。 

39
00:05:52,000 --> 00:06:06,000
这种方法的优点是它基本上适用于任何 ECU，而且一旦我们拥有了硬件和软件，就没有持续的成本，这对专业调校店来说可以节省大量开支。 

40
00:06:06,000 --> 00:06:18,000
这听起来可能是一个令人望而生畏的过程，当然这不是你能在五分钟内掌握的技能，但在本课程的帮助下，这绝对在普通调校师的能力范围内。 

41
00:06:18,000 --> 00:06:21,000
在继续之前，让我们快速回顾一下这一模块的内容。 

42
00:06:21,000 --> 00:06:31,000
重刷技术允许我们读取原厂 ECU 的内容，然后根据需要修改调校信息，并将其重新写入 ECU 中。 

43
00:06:31,000 --> 00:06:47,000
然而，我们从 ECU 中读取的原始数据本身几乎没有用处，我们需要一种方法来定义有哪些地图、如何找到它们以及需要什么缩放比例， 以便以一种合理的格式查看它们。

44
00:06:47,000 --> 00:07:01,000
对于那些更熟悉调校后装独立ECU的人来说，最难适应的一个方面是，当我们使用WinOLS进行调校时，大多数情况下无法实时进行调校更改。 

45
00:07:01,000 --> 00:07:14,000
我的意思是，我们无法在道路或测功机上运行车辆时，实时调整燃油或点火参数，并立即看到这些更改的效果，这与使用后装ECU时的预期完全不同。 

46
00:07:14,000 --> 00:07:29,000
相反，调校过程需要我们先在测功机或道路上进行测试运行，然后根据需要对地图进行更改，关闭发动机，将新地图刷入ECU，最后再进行测试以确认更改的效果。 

47
00:07:29,000 --> 00:07:38,000
这是必要的，因为ECU中的地图存储在只读存储器中，而这些信息在发动机运行时无法更改。 

48
00:07:38,000 --> 00:07:50,000
从表面上看，这听起来像是一个相当不方便且可能非常缓慢和耗时的调校方式，尤其是当刷写ECU的过程在某些情况下可能需要10到15分钟以上时。 

49
00:07:50,000 --> 00:08:02,000
然而，实际情况是，当我们重刷原厂ECU时，我们通常可以将需要调整的发动机运行区域限制在仅仅是全油门区域。 

50
00:08:02,000 --> 00:08:15,000
除非我们对发动机配置进行了重大更改，比如更换更大的凸轮轴或增加强制进气系统，否则通常怠速和巡航区域的发动机运行几乎不需要调整或只需少量调整。 

51
00:08:15,000 --> 00:08:25,000
还需要理解的是，与调校后装ECU不同，我们从一开始就会使用一个非常适合原厂发动机的标定或调校。 

52
00:08:25,000 --> 00:08:33,000
这意味着我们并不是从零开始，没有任何燃油或点火地图，就像使用独立ECU时那样。 

53
00:08:33,000 --> 00:08:47,000
虽然所需的调校过程显然取决于发动机改装的程度，但对于轻度改装的发动机，例如加装后市场排气、进气系统，或者在涡轮增压车上增加一点增压压力，通常只需要调整地图的全功率区域即可。 

54
00:08:50,000 --> 00:08:55,000
在这种情况下，调校过程与独立ECU的调校并没有太大区别。 

55
00:08:55,000 --> 00:09:02,000
我们在测功机上进行一次拉力测试，查看数据日志的结果，调整调校以适应需求，然后确认结果。 

56
00:09:02,000 --> 00:09:16,000
使用后装ECU时，我们可以在发动机运行时直接将这些更改输入到地图中，但在重刷的情况下，我们需要再多一步操作，也就是关闭发动机并将更改刷写到ECU中。 

57
00:09:16,000 --> 00:09:31,000
当然，也有一些情况下我们需要对发动机调校进行更大的改动，但根据我的经验，大多数重刷调校主要还是集中在全油门全功率的运行区域。 

58
00:09:31,000 --> 00:09:45,000
得益于当前一代原厂ECU的运行方式，针对我刚刚提到的改装所进行的基础调校，通常只需要少量几次刷写即可完成，这使得整个过程非常快速且高效。 

59
00:09:45,000 --> 00:09:53,000
通常，将车辆固定在测功机上并将其卸下所花的时间，甚至可能比实际进行调校的时间还要长。 

60
00:09:53,000 --> 00:10:10,000
不过，任何规则都有例外，一些更高级的刷写工具确实能够在某些车辆上实现实时调校，但这种情况仍然不常见，也不会是完成大多数调校的主要方式。

61
00:10:10,000 --> 00:10:24,000
重刷（Reflashing）在后装调校领域并不是一种新技术，但调校车辆所需的技能与反向工程原厂ECU并找到必要地图以进行调校更改所需的技能非常不同。 

62
00:10:24,000 --> 00:10:31,000
因此，有一个蓬勃发展的行业专门为原厂车辆生产调校解决方案，使调校师的工作更加轻松。 

63
00:10:31,000 --> 00:10:43,000
这些解决方案简化了整个过程，并提供了一个完整的软件和硬件组合，配备简单直观的用户界面，用于进行调校更改。 

64
00:10:43,000 --> 00:10:46,000
这些套件通常还会包括日志记录软件。 

65
00:10:46,000 --> 00:10:56,000
虽然市面上有许多商用重刷软件，但一些更常见的供应商包括 HP Tuners、EFI Live、EcuTek 和 COBB。 

66
00:10:56,000 --> 00:11:05,000
然而，商用重刷软件的一个挑战是，你不太可能使用一个软件包来适配所有车辆。 

67
00:11:05,000 --> 00:11:12,000
大多数公司往往专注于一个品牌，或者最多支持几个关键品牌。 

68
00:11:12,000 --> 00:11:22,000
这意味着，如果你想调校各种品牌和车型，你几乎肯定需要多个不同的重刷软件包，而这显然会变得昂贵。 

69
00:11:22,000 --> 00:11:30,000
此外，商用重刷公司在盈利模式上也存在显著差异。 

70
00:11:30,000 --> 00:11:36,000
例如，像 HP Tuners 这样的公司提供免费的软件，但你需要购买他们专用的 OBD2 接口。 

71
00:11:36,000 --> 00:11:44,000
除此之外，你还需要支付一次性授权费用，以首次访问特定车辆的ECU。 

72
00:11:44,000 --> 00:11:48,000
一旦ECU解锁，你可以随意多次调校它。 

73
00:11:48,000 --> 00:11:59,000
对于HP Tuners来说，为单辆车授权的费用大约从100美元起（针对常见和热门车型），而对于更专业的车辆则可能高达400到500美元。 

74
00:11:59,000 --> 00:12:09,000
虽然商用调校店会将这些费用包含在最终用户支付的价格中，但对于每周调校多辆车的繁忙店铺来说，这些费用可能会迅速增加。 

75
00:12:09,000 --> 00:12:17,000
另一方面，像COBB和EFI Live这样的公司，会销售一个硬件设备作为每辆车的调校接口。 

76
00:12:17,000 --> 00:12:24,000
一旦完成调校，该接口会锁定到特定车辆，这意味着你需要为每辆想要调校的车购买一个接口。 

77
00:12:24,000 --> 00:12:31,000
这种方式的前期成本通常比授权系统更贵，但它确实带来了一些优势。 

78
00:12:31,000 --> 00:12:39,000
首先，该接口可以用作实时参数的显示屏，在车辆行驶时为车主提供更广泛的信息访问。 

79
00:12:39,000 --> 00:12:52,000
其次，这些接口通常可以存储多个调校程序，例如允许最终用户在泵油和赛车燃油调校之间切换，而无需笔记本电脑或访问调校店。 

80
00:12:52,000 --> 00:12:56,000
这些接口提供的另一个关键优势是能够对车辆进行数据记录（Datalog）。 

81
00:12:56,000 --> 00:13:11,000
对于远程调校来说，这是一个真正的优势。调校师可以提供一个校准程序，车主将其刷入车辆后进行一些数据记录，调校师随后可以审查这些数据并根据需要确认或优化调校。 

82
00:13:11,000 --> 00:13:22,000
传统上，主流重刷制造商对更广泛的欧洲车辆支持较少，这基本上意味着想要调校这些车辆的人几乎没有选择。 

83
00:13:22,000 --> 00:13:28,000
这也是为什么 WinOLS 在这个市场中变得如此受欢迎的一个原因。 

84
00:13:28,000 --> 00:13:46,000
当然，过去几年情况开始有所改变，尤其是 HP Tuners，现在逐步扩展对一系列欧洲车辆的支持，包括大众（Volkswagen）、奥迪（Audi）、保时捷（Porsche）和梅赛德斯 AMG（Mercedes AMG），但在整体范围上仍然相对有限。 

85
00:13:46,000 --> 00:13:54,000
另一个可能的问题是，一些商用软件包的定义可能相对有限或不完整。 

86
00:13:54,000 --> 00:14:01,000
这意味着我们可能无法访问调校车辆所需的所有表格或参数。 

87
00:14:01,000 --> 00:14:08,000
通常情况下，我们无法添加额外的参数，因此如果遇到问题，只能依赖制造商来解决。 

88
00:14:08,000 --> 00:14:22,000
与传统的重刷解决方案相比，WinOLS 提供了几乎适用于任何车辆或 ECU 的能力，而且一旦购买了必要的软件和硬件，就没有持续的费用。 

89
00:14:22,000 --> 00:14:37,000
当然，前期的成本可能会很高，特别是对于一些用于读取和写入的专业级硬件选项，但与每次调校车辆都需要支付费用相比，这对调校店来说仍然是一个非常有吸引力的选择。 

90
00:14:37,000 --> 00:14:43,000
在接下来的模块中，我们将深入探讨 WinOLS 是什么，以及它与我们刚刚学习的选项有何不同。 

91
00:14:43,000 --> 00:14:46,000
在继续之前，我们先快速回顾一下本模块的内容。 

92
00:14:46,000 --> 00:14:53,000
记住，在进行重刷时，我们可以依赖提供定义的商用软件包。 

93
00:14:53,000 --> 00:15:02,000
缺点是，通常你不会找到一个能够覆盖所有你想调校的车型的商用软件包，而且你需要支付持续的费用。 

94
00:15:02,000 --> 00:15:17,000
另一方面，WinOLS 让我们可以处理几乎任何 ECU，并且没有持续成本，但它确实要求你具备自行寻找和定义映射的知识。

