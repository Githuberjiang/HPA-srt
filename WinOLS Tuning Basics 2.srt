1
00:00:00,000 --> 00:00:12,000
现在我们已经覆盖了大量必要的背景知识，帮助你理解课程内容，我们可以更深入地讨论 WinOLS，它是什么、能做什么，以及同样重要的，它不能做什么。 

2
00:00:12,000 --> 00:00:20,000
本质上，OLS 只是一个二进制编辑器，允许修改 ECU 内存的内容。 

3
00:00:20,000 --> 00:00:26,000
当然，这只是一个非常宽泛的描述，对于发动机调校来说并不太实用。 

4
00:00:26,000 --> 00:00:32,000
WinOLS 的真正强大之处在于它能够在 ECU 的原始数据中找到并定义映射。 

5
00:00:32,000 --> 00:00:42,000
当我们第一次在 OLS 中打开一个文件时，软件会通过内部的模式识别自动扫描整个文件并突出显示潜在的映射。 

6
00:00:42,000 --> 00:00:49,000
这听起来很有用，但实际上，这种功能本身对我们来说帮助有限。 

7
00:00:49,000 --> 00:00:55,000
首先，这并不能 100% 保证找到我们需要的所有映射。 

8
00:00:55,000 --> 00:01:09,000
OLS 会找到许多我们不需要的映射，但同样重要的是，它可能不会突出显示我们确实需要的特定映射，因此我们仍然需要自己确定对所处理的特定 ECU 来说哪些是重要的。 

9
00:01:09,000 --> 00:01:17,000
另一个与 OLS 相关的方面是，它找到的潜在映射只是原始映射，本身对我们来说意义不大。 

10
00:01:17,000 --> 00:01:25,000
它们不会像商用重刷软件包那样以友好的标签显示，例如“目标 lambda 值”等。 

11
00:01:25,000 --> 00:01:35,000
我们需要自己去解释这些数字的含义，判断这个映射可能是什么，然后应用一些缩放，将这些原始数值转换成有意义的、可理解的数据。 

12
00:01:35,000 --> 00:01:46,000
举个例子，我们快速浏览一下软件，看看在安装于第五代大众高尔夫 GTI 上的 Bosch MED 9.1 ECU 中的一个示例映射是什么样子的。 

13
00:01:46,000 --> 00:02:02,000
随着课程的深入，我们会详细介绍 OLS 的功能以及如何在软件中导航，但现在我们直接跳到我们要关注的特定映射，即驾驶员扭矩请求表，通常被称为“驾驶员意图表”。 

14
00:02:02,000 --> 00:02:10,000
我们可以以 2D 形式查看这个映射，如我们在这里看到的，目前它可能看起来并不特别有用或直观。 

15
00:02:10,000 --> 00:02:24,000
然而，模式识别是使用 OLS 的一个非常重要的部分，在课程后面，你将学习如何识别我们在这个 2D 视图中看到的常见模式，这将帮助我们理解我们正在查看的是一个特定的映射。 

16
00:02:24,000 --> 00:02:33,000
通过双击这个映射，我们可以将其以数字表格的形式查看，这时候它看起来像是我们可以理解并用于调整的内容了。 

17
00:02:33,000 --> 00:02:37,000
我们有一个 3D 表格，大小为 16 x 12。 

18
00:02:37,000 --> 00:02:41,000
如果你愿意，我们也可以选择以图形形式查看这个表格。 

19
00:02:41,000 --> 00:02:49,000
我发现这种方式对于发现表格中的趋势甚至错误非常有用，因为它们比单纯查看数字表格更容易被发现。 

20
00:02:49,000 --> 00:02:53,000
不过，我们现在切换回数字视图，深入研究一下。 

21
00:02:53,000 --> 00:02:59,000
在这个表格中，Y 轴是发动机转速，X 轴是油门踏板位置。 

22
00:02:59,000 --> 00:03:04,000
Z 轴或映射数据定义了所请求的扭矩输出。 

23
00:03:04,000 --> 00:03:11,000
在这个例子中，数据是相对扭矩，而不是以牛顿米或磅英尺为单位的具体扭矩值。 

24
00:03:11,000 --> 00:03:22,000
到目前为止一切顺利，不过，如果我们从表格中移除缩放因子，那么我们现在看到的就是我们在开始处理这个 ECU 时面对的原始数据。 

25
00:03:22,000 --> 00:03:32,000
例如，我们的 X 轴（你可能还记得是油门位置）现在的范围是 0 到 65,535，而不是我们通常期望的 0 到 100%。 

26
00:03:32,000 --> 00:03:42,000
发动机转速范围是 1600 到 24,000，而请求的扭矩值范围是 0 到 32,768。 

27
00:03:42,000 --> 00:03:49,000
因此你可以看到，从这些原始数值转换到我们能够理解并修改的内容，需要经过几个步骤。 

28
00:03:49,000 --> 00:04:02,000
在这个阶段，你可能会想，你怎么可能弄清楚这些原始数值或数字的含义，又怎么可能知道这实际上是一个“驾驶员意图表”？ 

29
00:04:02,000 --> 00:04:11,000
不过，这正是本课程的目的，我们会详细讲解所有这些内容，让你能够自信地找到自己的映射。 

30
00:04:11,000 --> 00:04:16,000
现在，我只是想向你展示 WinOLS 是什么以及它是如何工作的。 

31
00:04:16,000 --> 00:04:28,000
一旦我们定义了一个映射，OLS 的工作方式就会非常类似于任何调校软件。表格中的数值可以通过多种方式进行调整，以实现所需的更改，这正是你所期望的。 

32
00:04:28,000 --> 00:04:38,000
OLS 的一个很好的功能是，我们始终以原厂或原始文件为基础，任何更改都会被保存为该原始文件的一个版本。 

33
00:04:38,000 --> 00:04:45,000
这意味着我们可以随时将我们的映射更改与原始文件进行对比，查看做了哪些更改。 

34
00:04:45,000 --> 00:04:48,000
让我们跳转到另一个映射来看看这个功能。 

35
00:04:48,000 --> 00:04:53,000
这里我们看到的是同一个 MED 9.1 ECU 中用于部件保护的 lambda 映射。 

36
00:04:53,000 --> 00:05:01,000
在 2D 模式下查看时，我们可以看到数据中有些区域是绿色的，有些是红色的，还有一些是蓝色的。 

37
00:05:01,000 --> 00:05:07,000
我需要说明的是，这些颜色可以根据你的偏好进行更改，但其基本原则是相同的。 

38
00:05:07,000 --> 00:05:13,000
如果我们双击这个表格，就会切换到数字视图，个别单元格依然是用颜色进行编码的。 

39
00:05:13,000 --> 00:05:22,000
这些颜色的含义是，红色值表示相较于原始值有所增加，蓝色值表示有所减少，而绿色值表示未发生变化。 

40
00:05:22,000 --> 00:05:30,000
我们还可以将更改显示为相对于原始值的百分比、差异，或者直接显示原始值。 

41
00:05:31,000 --> 00:05:38,000
同样，随着课程的进展，我们会更深入地探讨所有这些功能，所以现在不用太担心我刚提到的任何功能。 

42
00:05:38,000 --> 00:05:43,000
通过一些练习，你会很快熟悉这些功能，并且它们会变得非常自然。 

43
00:05:43,000 --> 00:05:57,000
现代原厂发动机管理系统与后市场独立管理系统的不同之处之一在于，对于许多我们需要调整的表格，我们可能会发现存在多个表格，它们的数值可能相似但略有不同。 

44
00:05:57,000 --> 00:06:07,000
WinOLS 提供了一种方便的方法，将这些映射组织到一个文件夹结构中，这使得在一个地方找到与特定功能相关的所有表格变得更加容易。 

45
00:06:07,000 --> 00:06:21,000
正如我提到的，OLS 会找到几十甚至上百个对我们没有用处的潜在映射。为了避免混淆，一旦我们找到需要的相关映射，就可以删除那些我们不感兴趣的映射。 

46
00:06:21,000 --> 00:06:26,000
这可以让我们的映射目录保持整洁，并帮助避免潜在的混淆。 

47
00:06:26,000 --> 00:06:36,000
一旦我们对文件进行了相关更改，就可以将其保存为一个包含适当信息的版本，以便日后参考，并且文件已准备好导出。 

48
00:06:36,000 --> 00:06:45,000
这时我们就进入了 WinOLS 的局限性，大多数情况下，它并不提供读取或写入 ECU 的功能。 

49
00:06:45,000 --> 00:06:51,000
这需要通过一个单独的硬件接口来完成，在这方面有多种选择，我们将在下一模块中进行介绍。 

50
00:06:51,000 --> 00:07:00,000
当然，每条规则都有例外。如果你恰好使用的是 EVC 的 BDM/BSL 硬件，那么它确实可以直接与 OLS 软件通信，从而允许在 WinOLS 中完成读取和写入操作。 

51
00:07:07,000 --> 00:07:13,000
这种类型的硬件并不常见，但它仍然可用，并且为了完整性值得讨论一下。 

52
00:07:13,000 --> 00:07:16,000
在继续之前，让我们快速回顾一下。 

53
00:07:16,000 --> 00:07:22,000
WinOLS 是一个二进制编辑器，它允许我们修改 ECU 内存的内容。 

54
00:07:22,000 --> 00:07:28,000
找到并定义我们需要访问的映射以调校车辆，很大程度上依赖于模式识别。 

55
00:07:28,000 --> 00:07:42,000
虽然 WinOLS 会自动识别并查找映射，但通常这个功能的用处有限。本课程将教授你的关键技能之一是如何通过模式识别自己找到并定义这些映射。 

56
00:07:42,000 --> 00:07:57,000
需要理解的是，默认情况下，这些映射不会以我们调校时能理解的数值显示，我们还需要对映射进行缩放，使其对我们有意义并能被实际使用。

57
00:07:57,000 --> 00:08:04,000
- 正如我们在上一模块中所学到的，WinOLS 只是你需要的一整套工具中的一部分，用于实际调校车辆。 

58
00:08:04,000 --> 00:08:16,000
除了购买 WinOLS 的许可证以使用我们在本课程中专注的软件之外，你还需要一个硬件和软件接口，用于 ECU 的读取和写入。 

59
00:08:16,000 --> 00:08:21,000
除此之外，你可能还需要考虑一些通用的调校工具，我们也将在本模块中讨论这些工具。 

60
00:08:21,000 --> 00:08:30,000
说到刷写硬件，其实有多种选择，每种都有其优缺点，以及完全不同的价格范围。 

61
00:08:30,000 --> 00:08:37,000
例如，在价格范围的低端，有来自 PCM Flash 的解决方案，其价格低于 50 美元。 

62
00:08:37,000 --> 00:08:47,000
不过，该软件需要一个第三方的 OBD2 转 USB 接口，例如常见的 Tactrix 数据线，这将为你的成本增加大约 200 美元。 

63
00:08:47,000 --> 00:08:54,000
最后，你还需要购买一个相关模块，以便读取和写入你想要调校的车辆。 

64
00:08:54,000 --> 00:09:04,000
对于家庭爱好者来说，这种选择可能非常有吸引力。如果你只打算调校一辆特定的车，那么你可能只需花费大约 300 美元即可完成配置。 

65
00:09:04,000 --> 00:09:13,000
然而，正如你所预期的那样，更昂贵的选择提供了更全面的支持，包括数据记录，有时甚至支持实时调校。 

66
00:09:13,000 --> 00:09:20,000
在众多可用的选项中，有 Auto Tuner、bFlash 和 Kess 等，这里只是列举了一些例子。 

67
00:09:20,000 --> 00:09:30,000
可以说，对于处理各种车型的专业调校车间来说，最受欢迎的选择是 CMD，其价格大约为 5500 美元。 

68
00:09:30,000 --> 00:09:42,000
然而，这是一套完整的调校解决方案，能够通过 OBD2、直接从 ECU 接头插头通过供电跳线或直接从 PCB 进行读取和写入。 

69
00:09:42,000 --> 00:09:46,000
我们将在一些实际案例中使用的 bFlash 解决方案是另一种选择。 

70
00:09:46,000 --> 00:09:50,000
它的价格大约为 6300 美元。 

71
00:09:50,000 --> 00:09:59,000
与 CMD 类似，bFlash 也是一套完整的调校套件，提供 OBD2、台架和 PCB 读取和写入的选项。 

72
00:09:59,000 --> 00:10:06,000
此外，它还包括一系列其他工具，例如日志记录、日志分析以及对部分支持的控制器的实时调校功能。 

73
00:10:06,000 --> 00:10:16,000
实际上，大多数专业调校师都会拥有不止一套硬件刷写解决方案，并根据正在调校的车辆选择最合适的选项。 

74
00:10:16,000 --> 00:10:25,000
对于专业车间来说，这种额外的开支通常不是一个大问题，因为硬件的成本可以通过调校大量车辆快速收回。 

75
00:10:25,000 --> 00:10:33,000
不过，当你刚开始时，没有必要花费数千美元，尤其是如果你只想调校自己的车辆。 

76
00:10:33,000 --> 00:10:38,000
像 PCM Flash 这样的廉价选项可能完全足以满足你的需求。 

77
00:10:38,000 --> 00:10:46,000
另一个需要考虑的因素是主流专业刷写硬件通常会提供主机和从机套件。 

78
00:10:46,000 --> 00:10:55,000
专业刷写行业一直被一种模式主导，即主调校师为特定车辆和改装等级开发校准文件。 

79
00:10:55,000 --> 00:11:03,000
然后，他们会招募一些从属经销商，将这些校准文件卖给从属经销商，而从属经销商再将其转售给终端用户客户。 

80
00:11:03,000 --> 00:11:07,000
这种商业模式没有任何问题，而且已经被证明非常有效。 

81
00:11:07,000 --> 00:11:15,000
如果你与一家生产高质量校准文件的优质主调校师合作，作为从属经销商的结果也可能非常出色。 

82
00:11:15,000 --> 00:11:23,000
这种主从安排的缺点是，如果有些地方不符合自己的需求，从属经销商无法直接进行调校更改。 

83
00:11:23,000 --> 00:11:36,000
当然，更好的主调校师会提供进一步校准优化的服务（如果需要），但从根本上说，从属经销商并没有实际参与调校，因此这并不是本课程的重点。 

84
00:11:36,000 --> 00:11:45,000
我提到这一点只是因为从属套件的价格通常比主机套件低得多，因此如果你不了解其局限性，这可能会显得很有吸引力。 

85
00:11:45,000 --> 00:12:10,000
由于在受欢迎的刷写调校车辆中使用了许多不同的控制器，并且可用产品及其支持的应用程序在不断变化，因此很难提供一个明确的选项列表。但我们已经附上了一份 PDF 文档，你可以在本模块中找到。这份文件列出了截至录制时已知的各种车辆的热门选项，供你参考。 

86
00:12:10,000 --> 00:12:14,000
我们也很乐意在论坛上帮助解答关于特定应用的问题。 

87
00:12:14,000 --> 00:12:22,000
我们知道，选择刷写硬件是一个相当昂贵的决定，我们希望你能充满信心地进行购买。 

88
00:12:22,000 --> 00:12:29,000
本模块的关键点是，WinOLS 需要一个单独的硬件接口来读取和写入 ECU。 

89
00:12:29,000 --> 00:12:37,000
专业解决方案往往价格昂贵，因此更适合专业调校车间，而非家庭爱好者。 

90
00:12:37,000 --> 00:12:41,000
不过，幸运的是，也有一些更便宜的选项可以满足这些用户的需求。 

91
00:12:41,000 --> 00:12:54,000
对于寻找硬件解决方案的专业调校师来说，了解主机和从机套件之间的区别也很重要，以确保购买的解决方案符合你的需求。

