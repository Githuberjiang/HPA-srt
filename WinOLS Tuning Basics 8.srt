1
00:00:00,000 --> 00:00:10,000
在本课程的这一部分，我们将开始学习一些实用技能，这些技能是你需要理解并掌握的，以便充分利用WinOLS。 

2
00:00:10,000 --> 00:00:20,000
使用这一部分课程的最佳方式是，如果你有第二台电脑，可以在观看视频的同时进行实际操作。 

3
00:00:20,000 --> 00:00:34,000
接下来，我们将从下载一个完全免费的WinOLS演示版本开始，这将允许你在接下来的实用技能部分中跟随我们的示例一起学习。 

4
00:00:34,000 --> 00:00:45,000
在相关模块中，我们还会提供一个测试文件供你下载，你可以将其加载到你的OLS版本中，完全按照我们在屏幕上演示的内容进行操作。 

5
00:00:45,000 --> 00:00:55,000
这非常重要，因为这将帮助你在脑海中巩固我们在这里演示的技能和技术。 

6
00:00:55,000 --> 00:01:08,000
看我操作是一回事，但真正重要的是你自己能够熟练操作，所以我强烈建议你花时间完成这些练习，确保你能够复现我们教授的内容。 

7
00:01:08,000 --> 00:01:15,000
不过，在我们进入实用技能部分之前，我们将从下载这个OLS演示版本开始。 

8
00:01:15,000 --> 00:01:18,000
这相对简单，但我会一步步带你完成。 

9
00:01:18,000 --> 00:01:27,000
我们将从访问evc.de网站开始，你会看到它看起来和我笔记本电脑屏幕上的内容完全一样。 

10
00:01:27,000 --> 00:01:33,000
在左侧，你会看到一个“下载”选项卡，我们可以点击它。 

11
00:01:34,000 --> 00:01:40,000
打开后，我们可以看到这里有一堆选项，我们需要选择第一个选项——WinOLS。 

12
00:01:40,000 --> 00:01:52,000
现在我们可以看到，最新版本的WinOLS 5就在顶部，但如你所见，右侧标明需要购买。 

13
00:01:52,000 --> 00:02:05,000
如果你想要一个功能完整的OLS版本，可以实际修改文件并最重要的是将它们导出以刷写到ECU中，那么你确实需要购买。 

14
00:02:05,000 --> 00:02:17,000
然而，对于学习目的而言，免费的演示版本已经完全足够了。虽然它有所精简，但这并不会影响我们在实用技能部分的演示。 

15
00:02:17,000 --> 00:02:27,000
所以我们需要做的是向下找到WinOLS演示版本，然后点击它，这样就会开始下载。 

16
00:02:27,000 --> 00:02:30,000
我们等待下载完成后再继续操作。 

17
00:02:30,000 --> 00:02:47,000
下载完成后，我们可以直接运行该文件，这将安装并配置我们的WinOLS版本，至少是测试版本。现在我们来进行安装。 

18
00:02:47,000 --> 00:02:56,000
好了，现在我们的测试版本已经安装完成了。我们可以看到在左上角，它显示我们正在使用演示版本。 

19
00:02:56,000 --> 00:03:02,000
目前当然还没有加载任何项目，所以此时没有太多内容可以查看。 

20
00:03:02,000 --> 00:03:17,000
所有功能都呈灰色状态，或者至少工具栏的大部分功能是灰色的。这并不是因为演示版本不允许我们使用这些功能，而是因为目前没有加载任何项目，所以在OLS中暂时没有可用性。 

21
00:03:22,000 --> 00:03:30,000
不过，我们的测试版本软件已经安装完成，所以我们已经准备好继续学习剩余的实用技能了。 

22
00:03:30,000 --> 00:03:35,000
那么，让我们进入下一个模块吧。 

23
00:03:35,000 --> 00:03:53,000
在上一个模块中，我们向你展示了如何下载WinOLS的测试或演示版本。而在本模块中，我们将对软件的一些功能进行高层次的概览或导览，以便开始熟悉这款软件，了解它的工作原理以及我们可以使用的一些功能。 

24
00:03:53,000 --> 00:04:10,000
本模块并不是为了全面覆盖软件的所有功能，而是一个高层次的介绍。随着我们在本课程的实用技能部分深入学习，以及进入实际案例演示时，你会逐步建立更全面的理解。 

25
00:04:10,000 --> 00:04:24,000
在本模块中，我不想让你被所有功能淹没，而是希望你先了解一些日常使用中更常见的功能和特性，以便逐步上手。 

26
00:04:24,000 --> 00:04:25,000
那么，让我们进入软件吧。 

27
00:04:25,000 --> 00:04:40,000
打开软件后，目前我们能做的事情并不多。事实上，我们可以看到上方工具栏的大部分功能都是灰色的，这是因为目前我们还没有打开任何项目。现在，我们从打开一个项目开始吧。 

28
00:04:40,000 --> 00:04:42,000
这里有几种方法可以做到这一点。 

29
00:04:42,000 --> 00:04:52,000
如果我们要开始一个新项目（我们将在接下来的模块中详细讲解），可以使用工具栏中的“新建项目”图标。 

30
00:04:52,000 --> 00:05:02,000
而在本例中，我们将打开一个现有项目，可以通过点击“打开”图标来实现。当然，也可以使用快捷键。 

31
00:05:02,000 --> 00:05:08,000
这将显示我们可以访问的所有文件或项目的列表。 

32
00:05:08,000 --> 00:05:14,000
目前，为了简化操作，我们只有一个可用项目，这是一个第五代大众高尔夫的项目。 

33
00:05:14,000 --> 00:05:42,000
如果我们点击“确定”，会立即发现这个文件实际上有两个版本：一个是“原始版本”（Original），另一个是“HPA调校版本”（HPA Tuned）。希望这两个名字已经能很好地解释它们的用途。这实际上与我们在课程中多次提到的内容相关——当我们对文件进行修改时，这些修改会以版本的形式保存，我们始终可以参考原始版本。 

34
00:05:42,000 --> 00:05:49,000
这意味着，如果出于任何原因我们需要恢复到原始版本，这将非常简单。 

35
00:05:49,000 --> 00:05:56,000
此外，如你所见，将修改过的调校文件与原始文件进行对比也非常方便。 

36
00:05:56,000 --> 00:06:05,000
例如，我们可以看到我们在某些地方添加或减少了目标空燃比值（Lambda Target）或扭矩请求（Torque Request）。 

37
00:06:05,000 --> 00:06:11,000
在这个例子中，为了让我们有内容可以查看，我们选择“HPA调校版本”，然后点击“确定”。 

38
00:06:11,000 --> 00:06:23,000
现在，这个文件将以一种显著不同的格式打开，这与打开一个全新的二进制文件（没有定义或映射包）时的情况完全不同。 

39
00:06:23,000 --> 00:06:26,000
接下来，让我们快速浏览一下这个界面。 

40
00:06:26,000 --> 00:06:43,000
首先，我们可以看到中间的这个窗口，这是我们完成大部分工作的地方。这里有几种查看方式，我们稍后会进行讲解。我们可以移动它、最大化它，就像你在任何Windows软件中熟悉的操作一样。 

41
00:06:43,000 --> 00:06:52,000
能够缩小并移动窗口的好处在于，当我们需要对比两个文件时，这种功能非常实用，我们可以同时查看两个文件。 

42
00:06:52,000 --> 00:07:03,000
在左侧，我们可以看到菜单结构。首先，当前高亮显示的是“十六进制转储”（Hex Dump）。 

43
00:07:03,000 --> 00:07:14,000
接下来往下看，我们可以看到一个名为“我的映射”（My Maps）的文件夹结构，这就是我们将开始存储找到并已缩放或定义的映射的位置。 

44
00:07:14,000 --> 00:07:22,000
为了让操作更简单一些，你可以看到这里实际上已经创建了一个文件夹结构。 

45
00:07:22,000 --> 00:07:38,000
原因是，正如我们在课程中已经讨论过的，对于我们要查看的许多功能，几乎总是会有多个映射。为简单起见，如果我们能将与特定功能相关的所有映射存储在同一个位置，这会非常方便。 

46
00:07:38,000 --> 00:07:45,000
这样一来，我们可以同时看到所有相关映射，这不仅让我们的工作流程更加高效，也让一切变得更加整洁。 

47
00:07:45,000 --> 00:07:57,000
例如，目前我们可以看到“驾驶员请求的空燃比”（Driver Requested Lambda）文件夹已打开，并且我们可以看到该文件夹中有三个映射。 

48
00:07:57,000 --> 00:08:05,000
这三个映射实际上是同一个映射，但ECU会根据其他一些参数来决定使用其中的哪一个。 

49
00:08:05,000 --> 00:08:08,000
当然，我们也可以点击将其关闭。 

50
00:08:08,000 --> 00:08:14,000
基本上，这里的导航方式和你熟悉的其他软件类似。 

51
00:08:14,000 --> 00:08:24,000
在接下来的内容中，我们会向你展示如何创建这些子文件夹，以及如何将你找到并缩放的映射分配到这些文件夹中。 

52
00:08:24,000 --> 00:08:30,000
在文件夹结构的底部，我们可以看到一个名为“潜在映射”（Potential Maps）的文件夹，并且在括号中显示“204”。 

53
00:08:32,000 --> 00:08:37,000
当你第一次打开一个新项目或开始一个新项目时，如果没有映射包（Map Pack），基本上你会看到这样的界面。 

54
00:08:37,000 --> 00:08:40,000
你会看到“我的映射”（My Maps）文件夹，它会是空的，因为你还没有进行任何操作。 

55
00:08:40,000 --> 00:08:46,000
同时你会看到“潜在映射”（Potential Maps）。 

56
00:08:46,000 --> 00:08:58,000
我们点击展开“潜在映射”，然后向下滚动可以看到所有映射，显然这里有204个映射，这是WinOLS标记为潜在映射的内容。 

57
00:08:58,000 --> 00:09:13,000
就像我们在课程中已经讨论过的，其中一些映射可能是错误的，或者完全与我们的目的无关。同样，WinOLS也很可能遗漏了一些我们实际上需要找到并定义的映射。 

58
00:09:13,000 --> 00:09:17,000
因此，仅仅依靠这些内容本身的用处是有限的。 

59
00:09:17,000 --> 00:09:24,000
现在，当我们查看左侧的菜单结构时，还有一些其他值得提到的功能。 

60
00:09:24,000 --> 00:09:39,000
如果我们将鼠标悬停在垂直分隔线上，按住左键拖动，我们可以调整菜单的宽度，以便为屏幕腾出更多空间，或者更清晰地查看左侧文本文件中的内容。 

61
00:09:39,000 --> 00:09:43,000
如果我们想让屏幕拥有尽可能多的可用空间， 

62
00:09:43,000 --> 00:09:49,000
我们还可以点击这个小图标，这会完全移除屏幕左侧的面板。 

63
00:09:52,000 --> 00:10:02,000
如果你对此感到慌乱，不知道如何恢复，不用担心，这非常简单。我们可以看到这里有一个小的右箭头图标，点击它就可以回到起始状态。 

64
00:10:02,000 --> 00:10:27,000
现在看一下菜单结构的顶部，我不会详细介绍所有内容，但我们会经常用到的一些常用参数在这里。基本上，这里有一些用于X轴和Y轴的缩放功能，我们可以通过调整这些来更好地可视化我们正在查看的内容，因此我们在后续操作中会频繁使用这些功能。 

65
00:10:27,000 --> 00:10:35,000
这里有一个图标，我们可以点击它，这会打开或关闭网格结构。 

66
00:10:35,000 --> 00:10:44,000
这非常有用，可以用来参考Y值的大小，我们会时不时地用到它，所以目前我们就把它保持打开状态。 

67
00:10:44,000 --> 00:10:59,000
向右移动，我们可以设置WinOLS为8位、16位、32位或浮点模式，这取决于我们正在查看的特定映射。 

68
00:10:59,000 --> 00:11:07,000
我们还可以将WinOLS设置为高/低模式或者低/高模式。 

69
00:11:07,000 --> 00:11:19,000
这有点难以解释，我们会在后续操作中看到它的实际应用。这取决于我们正在使用的特定控制器以及查看的特定映射。 

70
00:11:19,000 --> 00:11:31,000
有时候，当我们查看数据时，它可能看起来没有意义，通过从低/高切换到高/低，一切看起来会更合理一些。所以我们需要时不时地更改这个设置。 

71
00:11:31,000 --> 00:11:38,000
我们还可以将数据设置为有符号或无符号格式。 

72
00:11:38,000 --> 00:11:47,000
同样，有时候我们会发现映射是有符号的，而有时候它们是无符号的，所以我们需要在这些格式之间进行切换。 

73
00:11:48,000 --> 00:11:56,000
接下来，我们可以将文本视图的数据显示为二进制、十进制或十六进制。 

74
00:11:56,000 --> 00:12:02,000
同样，这在一定程度上取决于个人偏好，决定我们希望以何种方式查看软件中的数据。 

75
00:12:02,000 --> 00:12:10,000
最后，在右侧我们有一个功能，可以查看我们的更改内容，这在与原始文件进行比较时非常重要。 

76
00:12:10,000 --> 00:12:16,000
目前显然我们还没有任何可见的更改，所以现在有点难以解释，但稍后我们会看到。 

77
00:12:16,000 --> 00:12:25,000
好了，现在让我们深入到这个十六进制转储（Hex Dump），看看我们实际上在处理什么。目前我们显然无法在主窗口中看到任何内容。 

78
00:12:25,000 --> 00:12:39,000
我们需要理解的是，首先在左下角，我们可以选择将数据显示为2D（目前选中的是2D）、文本或3D。 

79
00:12:39,000 --> 00:12:49,000
特别是在我们开始寻找映射时，我强烈建议使用2D视图（目前已高亮显示）。 

80
00:12:49,000 --> 00:12:58,000
这非常重要，因为它可以帮助我们可视化数据，从而开始观察模式并利用我们的模式识别能力。 

81
00:12:58,000 --> 00:13:09,000
例如，如果我们将数据切换到文本视图，除非你是绝对的专家，否则很难从中获取太多有用的信息。 

82
00:13:09,000 --> 00:13:16,000
现在我们回到2D视图，等我们真正加载并高亮显示一个映射后，再详细看看这些不同的选项。 

83
00:13:16,000 --> 00:13:26,000
在底部轴线这里，我们可以基本看到整个二进制文件的可视化，显示数据的大致位置。 

84
00:13:26,000 --> 00:13:40,000
我们可以看到这些彩色区域，比如这里有一些，然后真正的主要数据区域是在右边的这个部分，这里是实际的调校数据所在位置。 

85
00:13:40,000 --> 00:13:54,000
你可以看到这里有一个小的闪烁光标，这显示了我们目前的位置。我们刚刚打开这个文件，现在从这个二进制文件的最开始位置开始，但这里没有任何实际数据，对我们来说完全没用。 

86
00:13:54,000 --> 00:14:06,000
所以我们要做的就是按住光标，然后将其拖动到右边。我想做的是将我们移动到实际的主要数据区域，目前具体移动到哪里并不重要。 

87
00:14:06,000 --> 00:14:10,000
一旦我们进入到一些数据区域，一切看起来就会更合理一些。 

88
00:14:10,000 --> 00:14:15,000
现在，有多种方法可以操作我们所查看的数据位置。 

89
00:14:15,000 --> 00:14:18,000
你刚刚看到我通过拖动光标来进行操作。 

90
00:14:18,000 --> 00:14:26,000
这种方法非常适合进行大范围的调整，比如从文件的开头快速移动到末尾，就像我刚刚所做的那样。 

91
00:14:26,000 --> 00:14:39,000
但是，一旦我们进入到调校数据区域，我们会希望进行更小范围的调整。这里我可以按住右箭头键，这会让我们相对缓慢地在文件中移动。 

92
00:14:39,000 --> 00:14:49,000
如果我点击光标右边的区域（比如使用左箭头键），基本上我们会一次滚动一个完整屏幕的数据。 

93
00:14:49,000 --> 00:14:56,000
现在我们来看一下目前的数据，并将屏幕最大化以便更清晰地观察。 

94
00:14:56,000 --> 00:15:00,000
这样我们可以再次看到我们当前的位置。 

95
00:15:00,000 --> 00:15:11,000
在屏幕下方，我们还可以看到当前光标所在的位置以及我们正在访问的实际地址，这让我们可以非常精确地定位。 

96
00:15:11,000 --> 00:15:32,000
如果我们知道一个特定的地址，比如我们已经知道某个我们感兴趣的映射的位置，我们可以点击光标位置的显示框，然后直接输入我们想要访问的地址，光标就会跳转到那里。 

97
00:15:32,000 --> 00:15:35,000
在这个例子中，我不会这么做，所以我们将退出这个输入框。 

98
00:15:35,000 --> 00:15:44,000
现在，在屏幕上我们可以看到一系列由WinOLS找到并为我们高亮显示的映射。 

99
00:15:44,000 --> 00:15:47,000
这些映射就显示在顶部这里。 

100
00:15:47,000 --> 00:16:13,000
它们被高亮标记为14 x 12的表格，并且是8位的。当然，并不是每次这些都会是我们感兴趣或相关的表格，有时候是，有时候不是。但这就是WinOLS处理完文件后找到的潜在映射或它认为可能是映射的内容的样子。 

101
00:16:13,000 --> 00:16:36,000
现在我们已经进入了这个二进制文件中实际包含调校数据的区域，我们可以更好地理解文本视图、2D视图和3D视图的实际样子。当然，目前我们处于2D视图，就像我之前建议的，当我们试图使用模式识别时，我们希望使用2D视图，因为我们可以看到这些视觉模式，就像我们现在所看到的这样。 

102
00:16:36,000 --> 00:17:00,000
不过，让我们切换到文本视图，现在我们以文本视图查看映射。你可以看到映射仍然被高亮显示，但现在是以文本形式呈现的。在左侧我们可以看到地址，同时在右侧我们也可以看到数据大小的一种视觉表示，这些数据的大小在右侧以某种形式展示出来。 

103
00:17:00,000 --> 00:17:05,000
现在来看一下，目前我们处于十进制格式。 

104
00:17:05,000 --> 00:17:12,000
我们知道这一点是因为我们可以看到这里的小“255”图标被高亮显示了。 

105
00:17:12,000 --> 00:17:18,000
让我们点击十六进制图标，将其切换到十六进制格式。 

106
00:17:18,000 --> 00:17:33,000
原本每个数据是由四位数字表示的，现在变成了两位数字。这是因为我们切换到了十六进制格式，而我们知道最大的十六进制值“FF”相当于十进制的255。 

107
00:17:33,000 --> 00:17:44,000
现在让我们切换到二进制格式，显然现在所有数据变得更长了，因为我们现在用二进制值来表示每个字节的数据。 

108
00:17:44,000 --> 00:17:53,000
当我们以这种文本视图查看数据时，我们还可以调整列的宽度。 

109
00:17:53,000 --> 00:18:11,000
目前我们可以看到我们有一定数量的列宽。让我们暂时切换回十进制格式，我们可以看到在屏幕右下角显示的是当前的列宽为6。 

110
00:18:11,000 --> 00:18:27,000
也就是说，每行有6个字节的宽度。我们可以调整这个宽度，比如按下“M”键，列宽会依次增加到7、8、9、10、11、12。同样，我们可以按“W”键将列宽减少。 

111
00:18:27,000 --> 00:18:36,000
这为什么重要呢？如果我们看一下这个潜在的映射，它的标题显示这是一个14 x 12的映射，并且是8位的。 

112
00:18:36,000 --> 00:18:48,000
好，那么这实际上是什么意思呢？这意味着这个映射，如果我们用一个常规的3D数值表来表示，它将会是一个14 x 12的表格。 

113
00:18:48,000 --> 00:18:56,000
为了让这个表格看起来更合理一些，我们需要将表格的宽度调整为匹配的值。 

114
00:18:56,000 --> 00:19:04,000
再次回到屏幕右下角，目前的宽度是10，所以我们可以按下“M”键，将宽度调整到14。 

115
00:19:04,000 --> 00:19:15,000
希望你可以看到，当我这样调整时，右侧的小型可视化表示开始变得更有意义了一些。 

116
00:19:15,000 --> 00:19:19,000
我们确实可以看到一些模式，但似乎还是有些不对劲。 

117
00:19:19,000 --> 00:19:26,000
出现问题的原因是，我们的映射起始点实际上是在这里。 

118
00:19:26,000 --> 00:19:33,000
而我们真正需要做的是将起始点移动到表格的左侧。 

119
00:19:33,000 --> 00:19:45,000
为了调整显示的方式，我们可以按住“Ctrl”键并按右箭头键，你会看到我们正在将这部分数据向左移动。 

120
00:19:45,000 --> 00:19:54,000
这样做的结果是，在右侧我们可以得到一个清晰的图形化表示，显示了这个表格数据的样子。 

121
00:19:54,000 --> 00:20:04,000
当你使用文本视图来查找和定义这些文件或映射时，这一点非常重要，需要牢记。 

122
00:20:04,000 --> 00:20:14,000
顶部的数据实际上是轴数据，而Z轴或映射数据则是这里的主要部分。 

123
00:20:15,000 --> 00:20:20,000
好了，现在让我们来看一个已经定义好的映射。 

124
00:20:20,000 --> 00:20:23,000
我们可以先关闭潜在映射的窗口。 

125
00:20:23,000 --> 00:20:35,000
接下来我们来看一下“驾驶员请求的λ值（Driver Requested Lambda）”，双击它以打开子文件夹，我们可以看到这里有三个表格。 

126
00:20:35,000 --> 00:20:37,000
让我们双击第一个表格打开它。 

127
00:20:37,000 --> 00:20:48,000
打开这个表格后，我们看到的是一个3D文本视图表格，它看起来和我们在常见的商业重刷软件包中看到的表格差别不大。 

128
00:20:48,000 --> 00:20:53,000
虽然可能没有那么美观或直观，但仍然很容易理解。 

129
00:20:53,000 --> 00:21:02,000
让我们更详细地看一下这个表格。在这里，Y轴（垂直轴）是发动机转速。 

130
00:21:02,000 --> 00:21:13,000
水平轴（X轴）是相对扭矩，以百分比形式表示。而表格中的数字，也就是Z轴的值，是我们的λ目标值。 

131
00:21:13,000 --> 00:21:19,000
现在看表格中的数值，我们可以看到有些是绿色，有些是蓝色。 

132
00:21:19,000 --> 00:21:28,000
这些颜色的具体含义其实并不重要，因为我们可以根据自己的喜好设置颜色。不过，按照当前的颜色配置，绿色表示未更改的数值。 

133
00:21:29,000 --> 00:21:36,000
需要记住的是，我们这里是在与原始文件进行比较，所以蓝色的数值是已经从原始值被修改过的。 

134
00:21:36,000 --> 00:21:44,000
我们也可以通过工具栏右上角的小图标来了解这些更改的具体内容。 

135
00:21:44,000 --> 00:21:50,000
首先，如果我们点击“ORG”按钮，就可以看到这些数值的原始值。 

136
00:21:50,000 --> 00:21:54,000
我们还可以点击“百分比”（Percentage），这样就会显示出百分比变化。 

137
00:21:54,000 --> 00:22:08,000
在这个例子中，所有这些更改都降低了数值，因此它们是蓝色的。如果我们增加了数值，颜色编码就会改变为红色。 

138
00:22:08,000 --> 00:22:16,000
我们还可以将其显示为差值，具体来说是数值上的差异，同时也可以切换回原始值。 

139
00:22:16,000 --> 00:22:21,000
在数据显示方式上有一定的灵活性，可以根据自己的需求选择。 

140
00:22:21,000 --> 00:22:28,000
不过，当你在与原始文件进行比较时，这种功能非常有用，可以帮助你了解这些更改的幅度。 

141
00:22:28,000 --> 00:22:38,000
现在，当我们以这样的文本表格视图查看数据时，我们也可以快速看一下如何缩放或定义这些数值。 

142
00:22:38,000 --> 00:22:45,000
其实很多复杂的工作已经为我们完成了，我们还有一个即将到来的模块会更详细地介绍这一部分内容。 

143
00:22:45,000 --> 00:22:49,000
但基本上我们可以选择一个轴，在这个例子中，我们选择Y轴。 

144
00:22:49,000 --> 00:22:53,000
我刚刚用鼠标左键点击了它。 

145
00:22:53,000 --> 00:22:56,000
如果我双击它，会弹出一个属性框。 

146
00:22:56,000 --> 00:23:07,000
我们实际上可以通过这个属性框修改表格中的每一个单独元素，或者我们也可以更具体地操作。 

147
00:23:07,000 --> 00:23:09,000
下面我来展示一下具体是怎么操作的。 

148
00:23:09,000 --> 00:23:28,000
例如，现在因为我点击了Y轴，所以它已经被高亮显示了。当然，我也可以点击X轴或者映射数据（Z轴）。或者，如果我想编辑X轴，可以关闭这个属性框，然后双击X轴，就会弹出相应的编辑窗口。 

149
00:23:28,000 --> 00:23:35,000
现在我们回到Y轴，可以看到我们可以为它添加一个描述。 

150
00:23:35,000 --> 00:23:39,000
在这个例子中，很直观地可以看到这是“发动机转速”，并且这里有相应的单位。 

151
00:23:39,000 --> 00:23:44,000
也不是特别复杂，非常容易理解。 

152
00:23:44,000 --> 00:23:48,000
这里最重要的部分是“系数（Factor）”和“偏移量（Offset）”。 

153
00:23:48,000 --> 00:23:51,000
这里就是我们要输入缩放值（Scaling Value）的地方。 

154
00:23:51,000 --> 00:24:02,000
我们可以看到，为了得到实际的转速（RPM）值，我们实际上是将原始值乘以一个系数，在这个例子中是乘以40。 

155
00:24:02,000 --> 00:24:15,000
如果我们将这个系数改为1，现在我们可以看到这是Y轴的原始值，也就是在开始添加缩放之前打开这个映射时所看到的值。 

156
00:24:15,000 --> 00:24:21,000
正确理解如何进行缩放是使用OLS的关键。 

157
00:24:21,000 --> 00:24:26,000
我们将在即将到来的模块中更详细地探讨这一点。 

158
00:24:26,000 --> 00:24:35,000
现在看一下我们的映射数据，同样的信息，我们可以为其指定一个名称和描述。 

159
00:24:35,000 --> 00:24:38,000
此外，它还有一个单位，在这个例子中是λ（lambda）。 

160
00:24:38,000 --> 00:24:48,000
另外一个要素，特别是在我们刚开始处理这些数据时，可能是它没有任何精度（Precision）。 

161
00:24:48,000 --> 00:25:07,000
换句话说，没有小数位。所以此刻我们看到的情况可能是这样的：λ目标值全部设置为1.0。这本身几乎没有什么用处。但当我们开始添加数据时，值不会再四舍五入到1.0，而是显示真实的数值。 

162
00:25:07,000 --> 00:25:13,000
好了，我们先关闭这个窗口。这只是一个关于如何进行缩放的快速指南。 

163
00:25:13,000 --> 00:25:32,000
现在我们来看看这个特定的表格在3D视图中的样子。当我们切换到3D视图时，会弹出一个提示窗口，要求我们点击以优化3D视图参数，或者我们可以使用快捷键Ctrl+B来完成同样的操作。 

164
00:25:32,000 --> 00:25:35,000
现在我们可以看到一个3D表格出现在这里。 

165
00:25:35,000 --> 00:25:40,000
我们还可以看到调整前和调整后的数据，或者原始文件和调校文件的对比。 

166
00:25:40,000 --> 00:25:47,000
这让我们能够直观地感受到对这个特定文件所做更改的幅度。 

167
00:25:47,000 --> 00:26:05,000
好了，现在我们已经浏览了驾驶员请求的λ表格，我们可以通过点击右上角的小“X”按钮关闭它。关闭后，我们回到了整个二进制文件的可视化界面，再次可以在右下角看到我们当前所在文件的位置。 

168
00:26:05,000 --> 00:26:15,000
同样，只需点击光标右侧，我们可以一次滚动一屏数据；点击左侧，则可以向左滚动一屏数据。 

169
00:26:15,000 --> 00:26:18,000
显然，向左滚动时，我们会一次向左移动一屏数据。 

170
00:26:18,000 --> 00:26:47,000
在滚动过程中，我们还可以看到一些数据区域会弹出。在这个例子中，我们可以看到一些橙色和红色的数据区域。你可能还记得，当我们查看λ表格时，蓝色代表数值减少，而红色代表数值增加。因此，每当有更改发生时，这些都会在2D视图中以这种方式直观地显示出来。 

171
00:26:47,000 --> 00:26:53,000
现在，我们快速看一下配置选项，这也是值得关注的一点。 

172
00:26:53,000 --> 00:27:00,000
我们可以通过进入“杂项（Miscellaneous）”下拉菜单找到“配置（Configuration）”选项，或者直接使用快捷键F12快速打开它。 

173
00:27:04,000 --> 00:27:13,000
本质上，这是一系列配置决策或选项，我们可以通过这些设置来影响软件的运行方式以及外观和用户体验。 

174
00:27:13,000 --> 00:27:22,000
实际上，当你第一次安装OLS的演示版本时，你已经做了一些基本的选择。 

175
00:27:22,000 --> 00:27:27,000
这些选择都不是特别关键，因为我们可以随时回到这里进行调整。 

176
00:27:27,000 --> 00:27:34,000
其中一个比较常见的选项是颜色设置，这是人们通常会根据自己的喜好调整的内容。 

177
00:27:34,000 --> 00:27:51,000
你可以看到，默认情况下，我选择了工业标准的配色方案（Industrial Standard Colour Scheme），从下拉菜单中，我们还可以选择WinOLS的默认配色方案、Windows的配色方案，或者自定义配色方案，随你喜欢。 

178
00:27:51,000 --> 00:27:56,000
其实这并不重要，选择一个符合你个人偏好的方案就可以了。 

179
00:27:56,000 --> 00:28:04,000
这里还有一系列其他的选项，你可以熟悉一下这些设置。 

180
00:28:04,000 --> 00:28:20,000
大多数情况下，这些选项并不需要严格地进行修改。如果你以后决定需要更改某些设置，你可以随时回到这个F12配置窗口，根据需要进行调整。 

181
00:28:20,000 --> 00:28:22,000
好了，现在我们把这个窗口关闭。 

182
00:28:22,000 --> 00:28:26,000
目前为止，这个模块的内容就讲到这里。 

183
00:28:26,000 --> 00:28:33,000
再次强调，这个模块并不是为了提供全面的指南，而是简单介绍一些核心要素。 

184
00:28:33,000 --> 00:28:40,000
在接下来的章节中，随着我们的深入学习，你会逐步了解更多关于这款软件的内容。 

185
00:28:40,000 --> 00:28:59,000
在本模块中，我们将查看在开始一个新项目时需要填写的属性信息。我们将通过操作OLS软件来完成这一过程，和往常一样，你可以使用本模块底部提供的文件跟随操作。 

186
00:28:59,000 --> 00:29:08,000
我们首先需要点击工具栏中的新项目图标，从这里开始操作。 

187
00:29:08,000 --> 00:29:13,000
这会让我们选择要从哪里导入我们的项目或文件。 

188
00:29:13,000 --> 00:29:18,000
在这个案例中，我们将处理的是bFlash文件。 

189
00:29:18,000 --> 00:29:31,000
具体来说，我们将使用一个从我们的MK5大众高尔夫（Volkswagen Golf）中下载的文件。关于这个过程，我们在实践技能部分的最后进行了讲解。 

190
00:29:31,000 --> 00:29:40,000
我们将在这里选择的是我们的MK5高尔夫原厂文件（stock file）.bdc，这是一个bFlash文件。 

191
00:29:40,000 --> 00:29:44,000
这是通过OBD2读取的文件，所以我们点击它。 

192
00:29:44,000 --> 00:30:00,000
选择文件后，OLS会打开一个导入向导的新项目窗口。我们可以在这里看到这个窗口，它包含几页信息需要我们浏览。目前我们处在信息页面，这里没有什么需要更改的，我们可以点击“下一步”。 

193
00:30:00,000 --> 00:30:18,000
现在，OLS会检查我们可用的文件，并寻找类似的项目。它在这里提示我们，它已经找到了一个项目，这个项目已经被导入，并且与当前文件是100%匹配的。 

194
00:30:18,000 --> 00:30:26,000
在这种情况下，我们会看到这里有一些单选按钮（radio buttons），这些按钮定义了OLS将执行的操作。 

195
00:30:26,000 --> 00:30:33,000
通常情况下，我们最终会选择取消导入，而是打开现有的项目。 

196
00:30:33,000 --> 00:30:39,000
因为这是一个100%匹配的项目，所以实际上没有理由重新开始一个新项目。 

197
00:30:39,000 --> 00:30:45,000
不过在本次演示中，我会选择“忽略相似项目”（Ignore Similar Projects）并继续操作。 

198
00:30:45,000 --> 00:30:47,000
然后我们可以点击“下一步”（Next）。 

199
00:30:47,000 --> 00:30:55,000
接下来的步骤是，OLS会在线查找此文件可用的校验和模块（Check Sum Modules）。 

200
00:30:55,000 --> 00:31:04,000
不过对于我们的用途来说，这并不重要，因为校验和校正会通过我们的bFlash工具来处理。 

201
00:31:04,000 --> 00:31:23,000
这部分是OLS之外的操作，但根据你使用的工具，你可能需要为校验和模块付费。OLS会搜索校验和模块，并提示文件已成功识别，并且可以购买以下模块来校正数据。 

202
00:31:23,000 --> 00:31:29,000
但在我们的案例中，我们不需要这样做，所以我会点击“否”（No），然后点击“退出”（Exit）。 

203
00:31:29,000 --> 00:31:38,000
接下来我们点击“下一步”（Next），这时OLS会显示它从原始二进制文件中提取的属性信息。 

204
00:31:38,000 --> 00:31:42,000
这些属性信息会在接下来的屏幕中被添加进去。 

205
00:31:42,000 --> 00:31:51,000
因此，我们可以再次检查这些信息。在我们的案例中，没有必要进行任何更改，所以我们点击“下一步”（Next），现在我们进入项目属性（Project Properties）。 

206
00:31:51,000 --> 00:31:57,000
表面上看，这一步似乎很容易让人直接点击“完成”（Finish）并忽略它。 

207
00:31:57,000 --> 00:32:05,000
特别是如果你只是为自己调整一两辆车，这么做可能不会带来任何问题。 

208
00:32:05,000 --> 00:32:25,000
然而，随着时间的推移，当你开始调整越来越多的车辆时，花点额外的时间在项目属性上，可以真正帮助你区分不同的文件，并且清楚了解你所做的工作。这一点非常重要，尤其是当你计划将这些文件转售给其他调校师时。 

209
00:32:25,000 --> 00:32:35,000
因此，我建议你熟悉项目属性，并尽可能详细、准确地完成这些信息。 

210
00:32:35,000 --> 00:32:44,000
当然，你可以随时返回并修改这些信息，我们稍后会展示如何操作，但现在我们先来逐步浏览这些内容。 

211
00:32:44,000 --> 00:32:58,000
首先是“客户”（Client）。在我们的案例中，我们是为自己内部使用，所以我并不太在意客户信息是否填写。是否填写这一部分完全取决于你的个人偏好。 

212
00:32:58,000 --> 00:33:06,000
接下来是“车辆”（Vehicle）。这一部分我们确实需要尽可能完整地填写信息。 

213
00:33:06,000 --> 00:33:09,000
我们可以看到，有些信息已经被自动提取出来了。 

214
00:33:09,000 --> 00:33:14,000
例如，这是一辆乘用车（Passenger Car），品牌是大众（Volkswagen），车型是高尔夫（Golf）。 

215
00:33:14,000 --> 00:33:17,000
这里我们还可以选择添加更多的信息。 

216
00:33:17,000 --> 00:33:26,000
例如，这是一辆第五代车型（Build Five），发动机类型是2.0 TFSI GTI发动机。 

217
00:33:26,000 --> 00:33:35,000
接下来，我们可以选择车型年份（Model Year），在我们的案例中是2008年。 

218
00:33:35,000 --> 00:33:42,000
好了，这就是我们相对完整填写的车辆信息。这将成为我们日后参考的一个很好的依据。 

219
00:33:42,000 --> 00:33:46,000
如果需要的话，你还可以添加一些用户自定义信息（User Defined Information）。 

220
00:33:46,000 --> 00:33:49,000
在我们的案例中，我们会将这一部分留空。 

221
00:33:49,000 --> 00:34:06,000
然后我们进入ECU部分。这是非常重要的信息，不过这些信息应该已经由OLS从二进制文件中提取出来了。所以，虽然值得检查并确保信息正确，但在我们的案例中，我们实际上不需要手动更新这些内容。 

222
00:34:06,000 --> 00:34:17,000
从这里我们可以看到，这是一款博世（Bosch）ECU，更具体地说是博世MED9.1.5，这是控制器的系列型号（Controller Family）。 

223
00:34:17,000 --> 00:34:31,000
我们还可以看到软件版本（Software Variant），这是这里显示的数据。我们在课程中已经讨论过软件版本的重要性，所以确保我们拥有正确的软件版本是非常重要的。 

224
00:34:31,000 --> 00:34:35,000
继续往下看，我们还可以找到一些关于发动机的信息。 

225
00:34:36,000 --> 00:34:44,000
这里的信息还没有填写。再次强调，这取决于个人偏好，我倾向于尽可能准确地填写这些信息，所以我们现在来完成它。 

226
00:34:44,000 --> 00:34:51,000
在这个案例中，发动机名称是EA113。 

227
00:34:51,000 --> 00:34:57,000
当然，这是一款涡轮增压汽油发动机，排量为2.0升。 

228
00:34:57,000 --> 00:35:11,000
输出功率可能会根据你的市场和车型具体情况有所不同。我这里列出的是147千瓦的版本，扭矩为280牛·米。 

229
00:35:11,000 --> 00:35:22,000
如果需要，你还可以添加有关发动机符合的排放标准的信息，以及变速箱类型。在我们的案例中，变速箱是DSG。 

230
00:35:22,000 --> 00:35:35,000
接下来，我们还可以添加一些关于项目的信息。这部分可能更适用于你正在为生产调校文件进行开发工作时。 

231
00:35:35,000 --> 00:35:57,000
例如，如果我们跳到项目类型（Project Type）这里，目前它被列为“开发中”（In Development）。如果我们点击它，可以将其更改为“已完成”（Finished）、“无状态”（No State）、“待办”（To Do）等状态。这主要是为了确保如果你打算转售这个文件，它在仍处于开发中的情况下不会被意外出售。 

232
00:35:57,000 --> 00:36:02,000
同样地，为了转售，我们可以明确指定这是什么类型的文件。 

233
00:36:02,000 --> 00:36:07,000
比如它的价格是多少积分（Credits），项目类型是什么，以及相关的细节信息。 

234
00:36:07,000 --> 00:36:11,000
换句话说，如果这是一个一级调校（Stage 1），可能会增加20千瓦的功率，或者其他类似的内容。 

235
00:36:13,000 --> 00:36:20,000
最后，我们还有通信协议部分，这里已经自动获取了一些信息。 

236
00:36:20,000 --> 00:36:42,000
不过，添加更多细节可能会更有帮助。具体来说，这里读取硬件（Read Hardware）被列为bFlash，这没问题，因为我们显然使用了bFlash接口。但是，如果我们双击这里，或者点击图标，然后展开bFlash选项，我们可以选择这是“台架引导模式”（Bench Boot Mode）还是“OBD读取”（OBD Read）。 

237
00:36:42,000 --> 00:36:54,000
在这个案例中，我们知道导入的文件是通过OBD2读取的，所以我们会更新这一项。这再次为我们提供了文件获取方式的即时验证。 

238
00:36:54,000 --> 00:37:01,000
好了，现在我们可以点击“完成”（Finish），这将完成文件导入到OLS中的操作。 

239
00:37:01,000 --> 00:37:32,000
如果你之后想要调整项目的详细信息，可以在工具栏上方找到一个小图标，点击它即可回到刚才的界面。虽然这是一项相对简单的任务，但如果我们花时间尽可能准确地填写这些信息，最终会大有裨益，尤其是在你的调校文件和项目库逐渐扩大的时候，你会对此感到感激。

