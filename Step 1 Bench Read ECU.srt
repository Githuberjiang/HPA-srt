1
00:00:00,000 --> 00:00:08,000
我们的六步流程的第一步，当然是从 ECU 中读取原始二进制文件，我们将通过两种方式完成这一操作。

2
00:00:08,000 --> 00:00:24,000
尽管我们 MK5 高尔夫配备的博世 MED9.1 ECU 可以通过 OBD2 读取，这大大简化了流程，但我们仍然会先拆下 ECU，并进行完整的台架读取。

3
00:00:24,000 --> 00:00:40,000
对于 MK5 高尔夫来说，ECU 位于挡风玻璃下方的雨刷板中，这个位置稍微有些难以拆卸，但只要小心一点，应该不会太困难。

4
00:00:40,000 --> 00:00:57,000
如果你不确定你的车辆的 ECU 位于何处，只需快速搜索一下 Google 通常就能很快找到具体位置。不过挡风玻璃下的雨刷板确实是许多欧洲制造商的常见选择。

5
00:00:57,000 --> 00:01:03,000
一旦我们将 ECU 拆下并放到台架上，就可以开始进行台架读取了。

6
00:01:03,000 --> 00:01:10,000
当然，我们会使用 bFlash 接口来完成这个操作，我已经启动了 bFlash 软件。

7
00:01:10,000 --> 00:01:22,000
我们可以从选择车辆开始，在本例中，我们会一直滚动到大众品牌，点击下一步箭头，然后选择我们的 ECU 或控制器。

8
00:01:22,000 --> 00:01:38,000
这里显然是博世 MED9.1。MED9.1 的型号实际上也印在 ECU 的标签上，这是我们经常被问到的一个问题——如何知道车辆上安装的是哪种控制器。

9
00:01:38,000 --> 00:01:44,000
如前所述，这种情况下型号直接印在 ECU 上，所以这显然是一个非常好的指引。

10
00:01:44,000 --> 00:01:57,000
不过，如果最糟糕的情况下你找不到任何信息，再次快速搜索 Google 通常也能很快找到你的车辆配备的是哪种控制器。
1
00:01:55,000 --> 00:02:08,000
我们可以再次点击“下一步”，现在我们可以选择读取和写入的方法。当然在这里我们要选择台架协议，点击小的单选按钮，然后点击勾选确认。

2
00:02:08,000 --> 00:02:24,000
接下来的步骤是连接到我们的 ECU 接口插头。正如我们所知，如果点击右上角的小帮助图标，它会打开一个浏览器窗口，提供所有相关信息。

3
00:02:24,000 --> 00:02:32,000
最重要的是，这里实际上有一张图表，准确显示了如何连接 bFlash 设备的不同跳线。

4
00:02:32,000 --> 00:02:40,000
显然，在这里需要非常小心，以确保我们的连接是正确的。

5
00:02:40,000 --> 00:02:49,000
因此，一定要反复检查你的操作，数清空的引脚位置，仔细核对，确保你所有的连接都在正确的位置。

6
00:02:49,000 --> 00:03:03,000
正如我在课程中提到的，在关于台架方法读取和写入 ECU 的模块中，我们需要注意的是 S1 和 S2 的颜色乍一看非常相似。

7
00:03:03,000 --> 00:03:23,000
实际上，S1 是蓝色的，S2 是紫色的。如果你没有正确连接，就无法成功从 ECU 读取数据。当然，如果我们所有的连接都完全错误，也有可能会损坏 ECU，所以这里需要格外小心。

8
00:03:23,000 --> 00:03:30,000
这里还包括了一些备注，因此阅读这些内容总是一个好主意。

9
00:03:30,000 --> 00:03:39,000
其中最重要的一点是，在所有跳线连接完成之前，我们要确保 bFlash 设备没有接通电源。

10
00:03:39,000 --> 00:03:54,000
当然，在这一点上，在连接到 bFlash 设备之前，我们要确保选择了带跳线的连接器，而不是我们稍后将使用的 OBD2 连接器。

11
00:03:54,000 --> 00:04:10,000
当所有连接完成，并且 bFlash 设备已连接到笔记本电脑后，我们可以关闭浏览器。接下来我们显然要完成一次读取操作，可以通过点击工具栏上的小读取图标来完成。
1
00:04:10,000 --> 00:04:19,000
我们需要给文件命名，我们将使用车辆的车牌号 KNC680。

2
00:04:19,000 --> 00:04:26,000
我还喜欢添加一些关于车辆本身的信息，所以我们会命名为 VW MK5 Golf GTI。

3
00:04:26,000 --> 00:04:35,000
我们会将这个文件命名为 stock，并加上 bench，以便明确知道我们正在处理的文件类型。

4
00:04:35,000 --> 00:04:38,000
点击保存，读取过程将继续。

5
00:04:38,000 --> 00:04:49,000
这个过程可能需要一些时间，所以我们会在完成后再回来。

6
00:04:49,000 --> 00:05:04,000
好了，我们的台架读取已经完成，文件已保存。这将作为我们的安全后备文件，以防在调校过程中出现问题时，可以恢复到我们保存的台架文件。

7
00:05:04,000 --> 00:05:15,000
然而，为了通过 OBD2 接口进行调校，我会更进一步，同时从 OBD2 接口进行一次读取。

8
00:05:15,000 --> 00:05:18,000
显然，这需要我们将 ECU 安装回车辆。

9
00:05:18,000 --> 00:05:24,000
然后我们只需要更换 bFlash 设备上的跳线。

10
00:05:24,000 --> 00:05:27,000
我们可以改用 OBD2 接口。

11
00:05:27,000 --> 00:05:30,000
接下来，我们需要将其连接到车辆的 OBD2 接口。
1
00:05:32,000 --> 00:05:51,000
这里有几个注意事项，我们已经在课程内容中讨论过。导致 ECU 或控制器变砖或无响应的最常见原因之一是车辆的电池电压过低，或者我们的笔记本电脑没电了。

2
00:05:51,000 --> 00:05:57,000
因此，始终非常重要的一点是检查车辆和笔记本电脑的电池电压。

3
00:05:57,000 --> 00:06:04,000
我通常会确保我的笔记本电脑在读取或写入过程中连接到主电源，尤其是在重新刷写时。

4
00:06:04,000 --> 00:06:18,000
如果你的车辆电池电压可能有些问题，那么在读取和写入过程中连接一个高电流电池充电器也是一个不错的选择，以确保万无一失。

5
00:06:18,000 --> 00:06:21,000
从这里开始，流程就相对简单了。

6
00:06:21,000 --> 00:06:34,000
我们需要做的就是将 OBD2 接口连接到车辆的 OBD2 接口，这通常位于方向盘下方的仪表板下方，很容易找到。

7
00:06:34,000 --> 00:06:45,000
然后连接所有设备，将 bFlash 设备连接到电源，将 USB 接口连接到笔记本电脑，接着我们就可以开始读取流程了。

8
00:06:45,000 --> 00:07:02,000
在这种情况下，我们需要在 bFlash 的车辆菜单中执行相同的操作，选择 Volkswagen，然后和台架读取一样，选择 MED9.1 ECU。

9
00:07:02,000 --> 00:07:14,000
在下一屏幕中，我们当然需要选择 OBD2 协议进行读取和写入，点击小的勾选框关闭窗口。

10
00:07:14,000 --> 00:07:25,000
再次点击工具栏中的读取图标，并为文件命名，确保以后可以清楚地识别它。

11
00:07:25,000 --> 00:07:35,000
你可以在文件名中添加“stock”来标记原始文件，并为台架读取添加“bench”，或者为 OBD2 读取添加“OBD2”，这样可以非常清楚地区分文件。

1
00:07:40,000 --> 00:07:45,000
这些文件在文件大小上也会有所区别。

2
00:07:45,000 --> 00:07:51,000
完整的台架读取文件会比 OBD2 读取文件大。

3
00:07:51,000 --> 00:07:56,000
一旦我们为文件命名并点击“确定”，读取过程就会完成。

4
00:07:56,000 --> 00:08:22,000
在这种情况下，读取是一个虚拟读取，你可以通过读取速度注意到这一点，因为整个过程只需要几秒钟。bFlash 设备实际上是在从 ECU 中提取软件版本信息，然后从服务器下载一个原始的基础文件，这就是我们最终得到的文件。

5
00:08:22,000 --> 00:08:37,000
这里需要特别注意，尤其是当我们处理一辆已经调校过的车辆时，因为这样操作会丢失校准中的任何调校数据，所以你实际上是从头开始。

6
00:08:37,000 --> 00:09:01,000
在大多数情况下，这实际上是一件好事，因为它可以避免我们可能无意中保留了其他调校人员创建的错误数据，这些错误可能在表面上并不明显。虽然从头开始听起来工作量会更大一些，但这实际上确保了我们必须正确完成工作，而不是假设别人之前已经做得很好。

7
00:09:01,000 --> 00:09:20,000
到目前为止，我们已经完成了台架读取并保存了文件，同时也完成了 OBD2 读取，这个文件将被导入到 WinOLS 中。我们已经准备好进入下一步流程了。
